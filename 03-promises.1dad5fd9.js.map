{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAwBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAhCPL,EAAKa,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAMN,IAJA,IAAMC,EAAaC,SAASjB,EAAKkB,SAASb,MAAMc,OAC1CC,EAAYH,SAASjB,EAAKkB,SAASG,KAAKF,OACxCG,EAASL,SAASjB,EAAKkB,SAASI,OAAOH,OAEpCI,EAAI,EAAGA,GAAKD,EAAQC,IAC3BpB,EAAcoB,EAAGP,GAAcO,EAAI,GAAKH,GACrCI,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAGjDyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const firstDelay = parseInt(form.elements.delay.value);\n  const delayStep = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, firstDelay + (i - 1) * delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","firstDelay","parseInt","elements","value","delayStep","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.1dad5fd9.js.map"}